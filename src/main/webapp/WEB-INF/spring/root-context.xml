<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
		<context:component-scan base-package="com.kr.spt.service">
		</context:component-scan>
		
		<!-- <context:component-scan base-package="com.kr.spt.aoptest">
		</context:component-scan> -->
		
		<tx:annotation-driven transaction-manager="transactionManager" />
		
		<bean id='test' class='java.lang.String'>
		<constructor-arg><value>Hello World.... TEst youngjin 2015/04/30</value></constructor-arg>
		</bean>
		
		<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
			<property name="jndiName"><value>java:comp/env/jdbc/SpringDS</value></property>
		</bean> -->
		
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
  			destroy-method="close">
  			<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy"/>
			<property name="url" value="jdbc:log4jdbc:mysql://114.108.167.105:3306/SPT" />
			<property name="username" value="root"/>
			<property name="password" value="sptadmin"/>
			<!-- <property name="initialSize" value="${jdbc.min.size}" />
			<property name="maxActive" value="${jdbc.max.size}" /> -->
			<property name="maxIdle" value="5" />
			<property name="minIdle" value="2" />
		</bean>
		
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		  <property name="dataSource" ref="dataSource" />
		  <property name="mapperLocations" value="classpath*:com/kr/spt/mappers/**/*.xml" />
		</bean>
		
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 	    	<property name="basePackage" value="com.kr.spt.mappers" />
		</bean>
		
		<!--  AOP test  -->
		
		<bean id="magic" class="com.kr.spt.aoptest.Magician">
		</bean> 
		
		<aop:config>
			<aop:aspect ref="magic">
				<aop:pointcut
					id="thinking" 
					expression="execution(* com.kr.spt.aoptest.Thinker.thinkOfSomething(String))
						and args(thoughts)"/>
					<aop:before pointcut-ref="thinking"
					method="interceptThing"
					arg-names="thoughts" />
			</aop:aspect>
		</aop:config>
		
		
</beans>
